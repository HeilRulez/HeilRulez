SSH ДЛЯ GitHub

cd ~        # Переход в домашнюю директорию

SSH-ключи находятся в директории .ssh/

Сгенерируйте в терминале приватный и публичный ключи
 ssh-keygen -t ed25519 -C "praktikum.student@yandex.ru"
или
 ssh-keygen -t rsa -b 4096 -C "praktikum.student@yandex.ru"

 Далее:
    -Укажите место хранения ключей - не указать, сохранит по умолчанию в домашней дериктории или где ты там!?
    -Пароль
    -Повтор пароля
! оставить поле пустым, чтобы никогда не вводить пароль или каждый раз при работе с гитом

Запустите фоном команду ssh-agent. Она ищет SSH-ключ на вашем компьютере:
eval $(ssh-agent -s)

Привяжите приватный ключ к ssh-agent — это файл без расширения .pub
# Выбор команды зависит от алгоритма шифрования
     # для ed25519:
     ssh-add ~/.ssh/id_ed25519
     # для rsa:
     ssh-add ~/.ssh/id_rsa
--------------------------------------
Привязка SSH-ключа к аккаунту GitHub

Содержимое файла id_rsa.pub добавить в настройказ GitHub в SSH ключи

_______________________________________

Удаление ключаа аиз агента 

https://coderoad.ru/28191125/%D0%9A%D0%B0%D0%BA-%D0%BE
%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%B8%D1%82%D
1%8C-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D1%83-SSH-%D
1%81-%D1%83%D0%B4%D0%B0%D0%BB%D0%B5%D0%BD%D0%BD%D1%
8B%D0%BC-%D0%B7%D0%B0%D0%BA%D1%80%D1%8B%D1%82%D1%8
B%D0%BC-%D0%BA%D0%BB%D1%8E%D1%87%D0%BE%D0%BC

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\


Отмена изменений - git checkout -- "имя файла". Если было добавлено (git add .), то сначала - git reset (имя файла)
Удаление комита на один назад, с удалением изменений - git reset --hard HEAD^1. Тоже, но без удаления изменений - git reset --soft HEAD^1

Создание ветки - git branch 'имя новой ветки' (или создать и сразу перейти - git checkout -b 'Имя'). 
Переход по веткам - git checkout 'имя ветки' (посмотреть где я - git branch)
Переименовать ветку - git branch -m 'новое имя'

Добавление ветка на GitHub - git push --set-upstream origin 'имя ветки'
Удаление не выгруженной ветки из VSCode - git branch -d 'имя ветки'

Переход к коммиту - git checkout 'номер коммта'(например - 5d40586)

git log     - История коммитов
